{
  "contractName": "StableTokenFaucet",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastGiveaway",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "previousGiveaway",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "drip",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "getRecipient",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nextGiveawayBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct StableTokenFaucet.Recipient",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"getRecipient\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nextGiveawayBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct StableTokenFaucet.Recipient\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastGiveaway\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"previousGiveaway\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"value\":\"uint256 The amount of token to be burned\"}},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"return\":\"the name of the token.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/StableTokenFaucet.sol\":\"StableTokenFaucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":5},\"remappings\":[]},\"sources\":{\"/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/StableTokenFaucet.sol\":{\"keccak256\":\"0xe855aed3f1d80db7d52f65c191c3e9a04d9fe7fd801d1e4db4aba1c4bfb3c822\",\"urls\":[\"bzz-raw://dceee56f370202575a7d115efb45b0ec5a985d70a294991bdf701a3ca5324d31\",\"dweb:/ipfs/QmTLG4U3VNc3Cfp8KcXCXjWWTh8Frb15V54jpzegmnbKiR\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzz-raw://4ca6617349a9b36fd82e9442a8e445ce9021a174e4399d1457ddc894ee3f5df3\",\"dweb:/ipfs/QmcmyB4cNazZ1sw963Afaijt67M9bDgwmGXCgQajGTD4tm\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzz-raw://1b0ff368e21d6007c06e4cfb286fe59d7d7d3ec06283300c9be2153ba11fa93a\",\"dweb:/ipfs/QmRPq2wZM4RAcbj31dP34GCr1CSy2qy3JqfXEkdVie4HLT\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzz-raw://f40c91ca270bdc9b156f339081a0fc2bbcf73cf5f62b8c73ba555df753ff6619\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzz-raw://50b1ff986d3b2793850a66c8429d9886fdfb134b1509b3e98714e3e2a71e24f5\",\"dweb:/ipfs/QmSQBYPeY9tbR3ciGRNQqvcWKnNiuxtVMq2MsPWpLwuGGm\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\",\"urls\":[\"bzz-raw://f6beab874b52e710d2c42334e34bb5592146f7dd148d96ff32c0c474412bf2f4\",\"dweb:/ipfs/QmUKmVUX4Fif7dguPgC459cpGegiJd1s24YhgZUrBUkkDN\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzz-raw://bdaf72028f2dc29aa5191b2bfca315a9e3b1d58f900166bdb5ae5f500d569384\",\"dweb:/ipfs/QmZngPiWLXA9i2vp6XNPcGA23GHxT99V1Qma6iRivtbREy\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzz-raw://ee762ff5b7746e41d27dcbcea00c7a3034b58adb1b45ddadddb5b721aff450df\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252601181527014dd18589b19551bdad95b91985d58d95d607a1b60208083019182528351808501909452600784526629aa21262296a360c91b9084015281519192916012916200006e9160039190620001a0565b50815162000084906004906020850190620001a0565b506005805460ff191660ff9290921691909117905550620000a7905033620000bf565b600780546001600160a01b0319163317905562000245565b620000da8160066200011160201b62000ac31790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600160a01b0381166200012557600080fd5b6200013a82826001600160e01b036200016a16565b156200014557600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200018057600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001e357805160ff191683800117855562000213565b8280016001018555821562000213579182015b8281111562000213578251825591602001919060010190620001f6565b506200022192915062000225565b5090565b6200024291905b808211156200022157600081556001016200022c565b90565b610e5980620002556000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c806306fdde0314610117578063095ea7b31461013557806318160ddd1461015557806323b872dd1461016a578063313ce5671461017d578063395093511461019257806340c10f19146101a557806341c0e1b5146101b857806342966c68146101c257806362812a39146101d557806370a08231146101f557806379cc679014610208578063801ccd971461021b57806383dff6a01461022357806395d89b411461022b578063983b2d561461023357806398650275146102465780639f678cca1461024e578063a457c2d714610256578063a9059cbb14610269578063aa271e1a1461027c578063dd62ed3e1461028f575b600080fd5b61011f6102a2565b60405161012c9190610d19565b60405180910390f35b610148610143366004610c31565b610339565b60405161012c9190610d0b565b61015d6103a8565b60405161012c9190610d38565b610148610178366004610be4565b6103ae565b610185610468565b60405161012c9190610d46565b6101486101a0366004610c31565b610471565b6101486101b3366004610c31565b610500565b6101c0610527565b005b6101c06101d0366004610c61565b61054c565b6101e86101e3366004610b84565b610559565b60405161012c9190610d2a565b61015d610203366004610b84565b61059e565b6101c0610216366004610c31565b6105b9565b61015d6105c7565b61015d6105cd565b61011f6105d3565b6101c0610241366004610b84565b610634565b6101c061064f565b61014861065a565b610148610264366004610c31565b6106b0565b610148610277366004610c31565b6106f9565b61014861028a366004610b84565b610706565b61015d61029d366004610baa565b610719565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b505050505090505b90565b60006001600160a01b03831661034e57600080fd5b3360008181526001602090815260408083206001600160a01b0388168085529252918290208590559051909190600080516020610df783398151915290610396908690610d38565b60405180910390a35060015b92915050565b60025490565b6001600160a01b03831660009081526001602090815260408083203384529091528120546103e2908363ffffffff61074416565b6001600160a01b0385166000908152600160209081526040808320338452909152902055610411848484610759565b6001600160a01b038416600081815260016020908152604080832033808552925291829020549151909291600080516020610df7833981519152916104569190610d38565b60405180910390a35060019392505050565b60055460ff1690565b60006001600160a01b03831661048657600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546104ba908363ffffffff61081716565b3360008181526001602090815260408083206001600160a01b03891680855292529182902084905590519092600080516020610df7833981519152916103969190610d38565b600061050b33610706565b61051457600080fd5b61051e8383610830565b50600192915050565b6007546001600160a01b0316331461053e57600080fd5b6007546001600160a01b0316ff5b61055633826108cb565b50565b610561610b57565b506001600160a01b039081166000908152600a60209081526040918290208251808401909352805490931682526001909201549181019190915290565b6001600160a01b031660009081526020819052604090205490565b6105c38282610957565b5050565b60085481565b60095481565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032e5780601f106103035761010080835404028352916020019161032e565b61063d33610706565b61064657600080fd5b610556816109fe565b61065833610a46565b565b60003361066657600080fd5b336000908152600a6020526040902060010154431161068457600080fd5b336000818152600a60205260409020601443016001909101556103369068056bc75e2d63100000610830565b60006001600160a01b0383166106c557600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546104ba908363ffffffff61074416565b600061051e338484610759565b60006103a260068363ffffffff610a8e16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561075357600080fd5b50900390565b6001600160a01b03821661076c57600080fd5b6001600160a01b038316600090815260208190526040902054610795908263ffffffff61074416565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107ca908263ffffffff61081716565b6001600160a01b038084166000818152602081905260409081902093909355915190851690600080516020610dd78339815191529061080a908590610d38565b60405180910390a3505050565b60008282018381101561082957600080fd5b9392505050565b6001600160a01b03821661084357600080fd5b600254610856908263ffffffff61081716565b6002556001600160a01b038216600090815260208190526040902054610882908263ffffffff61081716565b6001600160a01b038316600081815260208190526040808220939093559151909190600080516020610dd7833981519152906108bf908590610d38565b60405180910390a35050565b6001600160a01b0382166108de57600080fd5b6002546108f1908263ffffffff61074416565b6002556001600160a01b03821660009081526020819052604090205461091d908263ffffffff61074416565b6001600160a01b038316600081815260208190526040808220939093559151600080516020610dd7833981519152906108bf908590610d38565b6001600160a01b038216600090815260016020908152604080832033845290915290205461098b908263ffffffff61074416565b6001600160a01b03831660009081526001602090815260408083203384529091529020556109b982826108cb565b6001600160a01b038216600081815260016020908152604080832033808552925291829020549151909291600080516020610df7833981519152916108bf9190610d38565b610a0f60068263ffffffff610ac316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a5760068263ffffffff610b0f16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610aa357600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b038116610ad657600080fd5b610ae08282610a8e565b15610aea57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116610b2257600080fd5b610b2c8282610a8e565b610b3557600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b604080518082019091526000808252602082015290565b80356103a281610db9565b80356103a281610dcd565b600060208284031215610b9657600080fd5b6000610ba28484610b6e565b949350505050565b60008060408385031215610bbd57600080fd5b6000610bc98585610b6e565b9250506020610bda85828601610b6e565b9150509250929050565b600080600060608486031215610bf957600080fd5b6000610c058686610b6e565b9350506020610c1686828701610b6e565b9250506040610c2786828701610b79565b9150509250925092565b60008060408385031215610c4457600080fd5b6000610c508585610b6e565b9250506020610bda85828601610b79565b600060208284031215610c7357600080fd5b6000610ba28484610b79565b610c8881610d61565b82525050565b610c8881610d6c565b6000610ca282610d54565b610cac8185610d58565b9350610cbc818560208601610d83565b610cc581610daf565b9093019392505050565b80516040830190610ce08482610c7f565b506020820151610cf36020850182610cf9565b50505050565b610c8881610336565b610c8881610d7d565b602081016103a28284610c8e565b602080825281016108298184610c97565b604081016103a28284610ccf565b602081016103a28284610cf9565b602081016103a28284610d02565b5190565b90815260200190565b60006103a282610d71565b151590565b6001600160a01b031690565b60ff1690565b60005b83811015610d9e578181015183820152602001610d86565b83811115610cf35750506000910152565b601f01601f191690565b610dc281610d61565b811461055657600080fd5b610dc28161033656feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a365627a7a72315820cb575f4e6c2bb37fbfff30ac95b5d6f07901367364d6c8c0fdf005fe48424adb6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101125760003560e01c806306fdde0314610117578063095ea7b31461013557806318160ddd1461015557806323b872dd1461016a578063313ce5671461017d578063395093511461019257806340c10f19146101a557806341c0e1b5146101b857806342966c68146101c257806362812a39146101d557806370a08231146101f557806379cc679014610208578063801ccd971461021b57806383dff6a01461022357806395d89b411461022b578063983b2d561461023357806398650275146102465780639f678cca1461024e578063a457c2d714610256578063a9059cbb14610269578063aa271e1a1461027c578063dd62ed3e1461028f575b600080fd5b61011f6102a2565b60405161012c9190610d19565b60405180910390f35b610148610143366004610c31565b610339565b60405161012c9190610d0b565b61015d6103a8565b60405161012c9190610d38565b610148610178366004610be4565b6103ae565b610185610468565b60405161012c9190610d46565b6101486101a0366004610c31565b610471565b6101486101b3366004610c31565b610500565b6101c0610527565b005b6101c06101d0366004610c61565b61054c565b6101e86101e3366004610b84565b610559565b60405161012c9190610d2a565b61015d610203366004610b84565b61059e565b6101c0610216366004610c31565b6105b9565b61015d6105c7565b61015d6105cd565b61011f6105d3565b6101c0610241366004610b84565b610634565b6101c061064f565b61014861065a565b610148610264366004610c31565b6106b0565b610148610277366004610c31565b6106f9565b61014861028a366004610b84565b610706565b61015d61029d366004610baa565b610719565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b505050505090505b90565b60006001600160a01b03831661034e57600080fd5b3360008181526001602090815260408083206001600160a01b0388168085529252918290208590559051909190600080516020610df783398151915290610396908690610d38565b60405180910390a35060015b92915050565b60025490565b6001600160a01b03831660009081526001602090815260408083203384529091528120546103e2908363ffffffff61074416565b6001600160a01b0385166000908152600160209081526040808320338452909152902055610411848484610759565b6001600160a01b038416600081815260016020908152604080832033808552925291829020549151909291600080516020610df7833981519152916104569190610d38565b60405180910390a35060019392505050565b60055460ff1690565b60006001600160a01b03831661048657600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546104ba908363ffffffff61081716565b3360008181526001602090815260408083206001600160a01b03891680855292529182902084905590519092600080516020610df7833981519152916103969190610d38565b600061050b33610706565b61051457600080fd5b61051e8383610830565b50600192915050565b6007546001600160a01b0316331461053e57600080fd5b6007546001600160a01b0316ff5b61055633826108cb565b50565b610561610b57565b506001600160a01b039081166000908152600a60209081526040918290208251808401909352805490931682526001909201549181019190915290565b6001600160a01b031660009081526020819052604090205490565b6105c38282610957565b5050565b60085481565b60095481565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561032e5780601f106103035761010080835404028352916020019161032e565b61063d33610706565b61064657600080fd5b610556816109fe565b61065833610a46565b565b60003361066657600080fd5b336000908152600a6020526040902060010154431161068457600080fd5b336000818152600a60205260409020601443016001909101556103369068056bc75e2d63100000610830565b60006001600160a01b0383166106c557600080fd5b3360009081526001602090815260408083206001600160a01b03871684529091529020546104ba908363ffffffff61074416565b600061051e338484610759565b60006103a260068363ffffffff610a8e16565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561075357600080fd5b50900390565b6001600160a01b03821661076c57600080fd5b6001600160a01b038316600090815260208190526040902054610795908263ffffffff61074416565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107ca908263ffffffff61081716565b6001600160a01b038084166000818152602081905260409081902093909355915190851690600080516020610dd78339815191529061080a908590610d38565b60405180910390a3505050565b60008282018381101561082957600080fd5b9392505050565b6001600160a01b03821661084357600080fd5b600254610856908263ffffffff61081716565b6002556001600160a01b038216600090815260208190526040902054610882908263ffffffff61081716565b6001600160a01b038316600081815260208190526040808220939093559151909190600080516020610dd7833981519152906108bf908590610d38565b60405180910390a35050565b6001600160a01b0382166108de57600080fd5b6002546108f1908263ffffffff61074416565b6002556001600160a01b03821660009081526020819052604090205461091d908263ffffffff61074416565b6001600160a01b038316600081815260208190526040808220939093559151600080516020610dd7833981519152906108bf908590610d38565b6001600160a01b038216600090815260016020908152604080832033845290915290205461098b908263ffffffff61074416565b6001600160a01b03831660009081526001602090815260408083203384529091529020556109b982826108cb565b6001600160a01b038216600081815260016020908152604080832033808552925291829020549151909291600080516020610df7833981519152916108bf9190610d38565b610a0f60068263ffffffff610ac316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a5760068263ffffffff610b0f16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610aa357600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b038116610ad657600080fd5b610ae08282610a8e565b15610aea57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116610b2257600080fd5b610b2c8282610a8e565b610b3557600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b604080518082019091526000808252602082015290565b80356103a281610db9565b80356103a281610dcd565b600060208284031215610b9657600080fd5b6000610ba28484610b6e565b949350505050565b60008060408385031215610bbd57600080fd5b6000610bc98585610b6e565b9250506020610bda85828601610b6e565b9150509250929050565b600080600060608486031215610bf957600080fd5b6000610c058686610b6e565b9350506020610c1686828701610b6e565b9250506040610c2786828701610b79565b9150509250925092565b60008060408385031215610c4457600080fd5b6000610c508585610b6e565b9250506020610bda85828601610b79565b600060208284031215610c7357600080fd5b6000610ba28484610b79565b610c8881610d61565b82525050565b610c8881610d6c565b6000610ca282610d54565b610cac8185610d58565b9350610cbc818560208601610d83565b610cc581610daf565b9093019392505050565b80516040830190610ce08482610c7f565b506020820151610cf36020850182610cf9565b50505050565b610c8881610336565b610c8881610d7d565b602081016103a28284610c8e565b602080825281016108298184610c97565b604081016103a28284610ccf565b602081016103a28284610cf9565b602081016103a28284610d02565b5190565b90815260200190565b60006103a282610d71565b151590565b6001600160a01b031690565b60ff1690565b60005b83811015610d9e578181015183820152602001610d86565b83811115610cf35750506000910152565b601f01601f191690565b610dc281610d61565b811461055657600080fd5b610dc28161033656feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a365627a7a72315820cb575f4e6c2bb37fbfff30ac95b5d6f07901367364d6c8c0fdf005fe48424adb6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "766:1091:8:-;;;1185:160;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:15;;;;;;;;;;;-1:-1:-1;;;405:163:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;405:163:15;;;;493:12;;405:163;;;1287:2:8;;493:12:15;;:5;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:15;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:15;:20;;-1:-1:-1;;541:20:15;;;;;;;;;;;;-1:-1:-1;275:22:11;;-1:-1:-1;286:10:11;275;:22::i;:::-;1322:5:8;:18;;-1:-1:-1;;;;;;1322:18:8;1330:10;1322:18;;;766:1091;;685:119:11;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:11;;;;;;;;685:119;:::o;259:181:10:-;-1:-1:-1;;;;;335:21:10;;327:30;;;;;;376:18;380:4;386:7;-1:-1:-1;;;;;376:3:10;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:10;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:10;;874:30;;;;;;-1:-1:-1;;;;;;921:20:10;:11;:20;;;;;;;;;;;;;;;786:162::o;766:1091:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;766:1091:8;;;-1:-1:-1;766:1091:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "766:1091:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;766:1091:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:15;;;:::i;:::-;;;;;;;;;;;;;;;;2735:238:13;;;;;;;;;:::i;:::-;;;;;;;;936:89;;;:::i;:::-;;;;;;;;3436:294;;;;;;;;;:::i;930:81:15:-;;;:::i;:::-;;;;;;;;4233:317:13;;;;;;;;;:::i;443:128:16:-;;;;;;;;;:::i;1765:89:8:-;;;:::i;:::-;;295:77:14;;;;;;;;;:::i;1627:134:8:-;;;;;;;;;:::i;:::-;;;;;;;;1234:104:13;;;;;;;;;:::i;624:93:14:-;;;;;;;;;:::i;986:31:8:-;;;:::i;1021:27::-;;;:::i;771:85:15:-;;;:::i;508:90:11:-;;;;;;;;;:::i;604:75::-;;;:::i;1349:274:8:-;;;:::i;5058:327:13:-;;;;;;;;;:::i;1962:137::-;;;;;;;;;:::i;395:107:11:-;;;;;;;;;:::i;1669:129:13:-;;;;;;;;;:::i;628:81:15:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;;:::o;2735:238:13:-;2800:4;-1:-1:-1;;;;;2824:21:13;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:13;;;;;;;;;;;:37;;;2909:36;;2857:29;;2866:10;-1:-1:-1;;;;;;;;;;;2909:36:13;;;2889:5;;2909:36;;;;;;;;;;-1:-1:-1;2962:4:13;2735:238;;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:13;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:13;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:13;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;3648:54;;3663:10;;3648:54;-1:-1:-1;;;;;;;;;;;3648:54:13;;;3675:26;3648:54;;;;;;;;;;-1:-1:-1;3719:4:13;3436:294;;;;;:::o;930:81:15:-;995:9;;;;930:81;:::o;4233:317:13:-;4313:4;-1:-1:-1;;;;;4337:21:13;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:13;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:13;;;;;;;;;;;:77;;;4462:60;;4370:29;;-1:-1:-1;;;;;;;;;;;4462:60:13;;;4370:77;4462:60;;443:128:16;511:4;350:20:11;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:16;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:16;443:128;;;;:::o;1765:89:8:-;1818:5;;-1:-1:-1;;;;;1818:5:8;1804:10;:19;1796:28;;;;;;1843:5;;-1:-1:-1;;;;;1843:5:8;1830:19;295:77:14;341:24;347:10;359:5;341;:24::i;:::-;295:77;:::o;1627:134:8:-;1701:16;;:::i;:::-;-1:-1:-1;;;;;;1734:22:8;;;;;;;:10;:22;;;;;;;;;1727:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:134::o;1234:104:13:-;-1:-1:-1;;;;;1315:16:13;1289:7;1315:16;;;;;;;;;;;;1234:104::o;624:93:14:-;688:22;698:4;704:5;688:9;:22::i;:::-;624:93;;:::o;986:31:8:-;;;;:::o;1021:27::-;;;;:::o;771:85:15:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:11;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;1349:274:8:-;1389:4;1411:10;1403:33;;;;;;1461:10;1450:22;;;;:10;:22;;;;;:40;;;1493:12;-1:-1:-1;1442:64:8;;;;;;1523:10;1512:22;;;;:10;:22;;;;;1570:2;1555:12;:17;1512:40;;;;:60;1578:40;;1596:21;1578:5;:40::i;5058:327:13:-;5143:4;-1:-1:-1;;;;;5167:21:13;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:13;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;395:107:11:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;1669:129:13:-;-1:-1:-1;;;;;1767:15:13;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1205:145:12:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:12;;;1205:145::o;5599:256:13:-;-1:-1:-1;;;;;5686:16:13;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:13;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:13;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:13;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;-1:-1:-1;;;;;;;;;;;5823:25:13;;;5842:5;;5823:25;;;;;;;;;;5599:256;;;:::o;1431:145:12:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:12:o;6198:263:13:-;-1:-1:-1;;;;;6272:21:13;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:13;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:13;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;6353:18;;:9;-1:-1:-1;;;;;;;;;;;6418:36:13;;;6448:5;;6418:36;;;;;;;;;;6198:263;;:::o;6687:::-;-1:-1:-1;;;;;6761:21:13;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:13;;:9;:18;;;;;;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:13;;:9;:18;;;;;;;;;;;:50;;;;6907:36;;-1:-1:-1;;;;;;;;;;;6907:36:13;;;6937:5;;6907:36;;7339:255;-1:-1:-1;;;;;7441:17:13;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:13;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:13;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;7527:60;;7545:10;;7527:60;-1:-1:-1;;;;;;;;;;;7527:60:13;;;7557:29;7527:60;;685:119:11;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:11;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:11;;;;;;;;810:127;:::o;786:162:10:-;858:4;-1:-1:-1;;;;;882:21:10;;874:30;;;;;;-1:-1:-1;;;;;;921:20:10;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:10;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:10;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:10;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:10;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:10;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:10;;;514:184::o;766:1091:8:-;;;;;;;;;;-1:-1:-1;766:1091:8;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:130;209:20;;234:33;209:20;234:33;;279:241;;383:2;371:9;362:7;358:23;354:32;351:2;;;399:1;396;389:12;351:2;434:1;451:53;496:7;476:9;451:53;;;441:63;345:175;-1:-1;;;;345:175;527:366;;;648:2;636:9;627:7;623:23;619:32;616:2;;;664:1;661;654:12;616:2;699:1;716:53;761:7;741:9;716:53;;;706:63;;678:97;806:2;824:53;869:7;860:6;849:9;845:22;824:53;;;814:63;;785:98;610:283;;;;;;900:491;;;;1038:2;1026:9;1017:7;1013:23;1009:32;1006:2;;;1054:1;1051;1044:12;1006:2;1089:1;1106:53;1151:7;1131:9;1106:53;;;1096:63;;1068:97;1196:2;1214:53;1259:7;1250:6;1239:9;1235:22;1214:53;;;1204:63;;1175:98;1304:2;1322:53;1367:7;1358:6;1347:9;1343:22;1322:53;;;1312:63;;1283:98;1000:391;;;;;;1398:366;;;1519:2;1507:9;1498:7;1494:23;1490:32;1487:2;;;1535:1;1532;1525:12;1487:2;1570:1;1587:53;1632:7;1612:9;1587:53;;;1577:63;;1549:97;1677:2;1695:53;1740:7;1731:6;1720:9;1716:22;1695:53;;1771:241;;1875:2;1863:9;1854:7;1850:23;1846:32;1843:2;;;1891:1;1888;1881:12;1843:2;1926:1;1943:53;1988:7;1968:9;1943:53;;2019:103;2092:24;2110:5;2092:24;;;2087:3;2080:37;2074:48;;;2129:104;2206:21;2221:5;2206:21;;2240:347;;2352:39;2385:5;2352:39;;;2403:71;2467:6;2462:3;2403:71;;;2396:78;;2479:52;2524:6;2519:3;2512:4;2505:5;2501:16;2479:52;;;2552:29;2574:6;2552:29;;;2543:39;;;;2332:255;-1:-1;;;2332:255;2673:497;2890:23;;2820:4;2811:14;;;2919:63;2815:3;2890:23;2919:63;;;2840:148;3074:4;3067:5;3063:16;3057:23;3086:63;3143:4;3138:3;3134:14;3120:12;3086:63;;;2998:157;2793:377;;;;3177:103;3250:24;3268:5;3250:24;;3407:107;3486:22;3502:5;3486:22;;3521:201;3633:2;3618:18;;3647:65;3622:9;3685:6;3647:65;;3729:301;3867:2;3881:47;;;3852:18;;3942:78;3852:18;4006:6;3942:78;;4037:321;4209:2;4194:18;;4223:125;4198:9;4321:6;4223:125;;4365:213;4483:2;4468:18;;4497:71;4472:9;4541:6;4497:71;;4585:205;4699:2;4684:18;;4713:67;4688:9;4753:6;4713:67;;4797:122;4885:12;;4856:63;4927:163;5030:19;;;5079:4;5070:14;;5023:67;5098:91;;5160:24;5178:5;5160:24;;5196:85;5262:13;5255:21;;5238:43;5288:121;-1:-1;;;;;5350:54;;5333:76;5495:81;5566:4;5555:16;;5538:38;5584:268;5649:1;5656:101;5670:6;5667:1;5664:13;5656:101;;;5737:11;;;5731:18;5718:11;;;5711:39;5692:2;5685:10;5656:101;;;5772:6;5769:1;5766:13;5763:2;;;-1:-1;;5837:1;5819:16;;5812:27;5633:219;5860:97;5948:2;5928:14;-1:-1;;5924:28;;5908:49;5965:117;6034:24;6052:5;6034:24;;;6027:5;6024:35;6014:2;;6073:1;6070;6063:12;6089:117;6158:24;6176:5;6158:24;",
  "source": "pragma solidity >=0.4.24 <0.6.0;\npragma experimental ABIEncoderV2;\n\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\n\ncontract StableTokenFaucet is ERC20, ERC20Detailed, ERC20Mintable, ERC20Burnable {\n    //string public name = \"Stable\";\n    //string public symbol = \"STBLE\";\n    //uint8 public decimals = 18;\n\n  address payable owner;\n  uint256 public previousGiveaway;\n  uint256 public lastGiveaway;\n\n  struct Recipient {\n    address receiver;\n    uint256 nextGiveawayBlock;\n  }\n\n  mapping(address => Recipient) private recipients;\n\n  constructor()\n    ERC20Burnable()\n    ERC20Mintable()\n    ERC20Detailed(\"StableTokenFaucet\",\"STBLE-F\",18)\n    ERC20()\n    public\n  {\n    owner = msg.sender;\n  }\n\n  function drip()\n    public\n    returns (bool)\n  {\n    require(msg.sender != address(0));\n    require(recipients[msg.sender].nextGiveawayBlock < block.number);\n    recipients[msg.sender].nextGiveawayBlock = block.number + 20;\n    _mint(msg.sender, 100000000000000000000);\n  }\n\n  function getRecipient(address _recipient)\n    public\n    view\n    returns(Recipient memory)\n  {\n    return recipients[_recipient];\n  }\n\n  function kill() public\n  {\n    require(msg.sender == owner);\n    selfdestruct(owner);\n  }\n\n}\n",
  "sourcePath": "/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/StableTokenFaucet.sol",
  "ast": {
    "absolutePath": "/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/StableTokenFaucet.sol",
    "exportedSymbols": {
      "StableTokenFaucet": [
        5310
      ]
    },
    "id": 5311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5191,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:8"
      },
      {
        "id": 5192,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 5193,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6120,
        "src": "485:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 5194,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6209,
        "src": "549:71:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 5195,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6151,
        "src": "621:71:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 5196,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6237,
        "src": "693:71:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5197,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6119,
              "src": "796:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6119",
                "typeString": "contract ERC20"
              }
            },
            "id": 5198,
            "nodeType": "InheritanceSpecifier",
            "src": "796:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5199,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6208,
              "src": "803:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$6208",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 5200,
            "nodeType": "InheritanceSpecifier",
            "src": "803:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5201,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6236,
              "src": "818:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$6236",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 5202,
            "nodeType": "InheritanceSpecifier",
            "src": "818:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5203,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6150,
              "src": "833:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$6150",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 5204,
            "nodeType": "InheritanceSpecifier",
            "src": "833:13:8"
          }
        ],
        "contractDependencies": [
          5559,
          6119,
          6150,
          6208,
          6236,
          6305
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5310,
        "linearizedBaseContracts": [
          5310,
          6150,
          6236,
          5559,
          6208,
          6119,
          6305
        ],
        "name": "StableTokenFaucet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5206,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "961:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 5205,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "961:15:8",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5208,
            "name": "previousGiveaway",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "986:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5207,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "986:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5210,
            "name": "lastGiveaway",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "1021:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5209,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1021:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "StableTokenFaucet.Recipient",
            "id": 5215,
            "members": [
              {
                "constant": false,
                "id": 5212,
                "name": "receiver",
                "nodeType": "VariableDeclaration",
                "scope": 5215,
                "src": "1076:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 5211,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1076:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5214,
                "name": "nextGiveawayBlock",
                "nodeType": "VariableDeclaration",
                "scope": 5215,
                "src": "1098:25:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5213,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1098:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Recipient",
            "nodeType": "StructDefinition",
            "scope": 5310,
            "src": "1053:75:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5219,
            "name": "recipients",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "1132:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
              "typeString": "mapping(address => struct StableTokenFaucet.Recipient)"
            },
            "typeName": {
              "id": 5218,
              "keyType": {
                "id": 5216,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1140:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1132:29:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                "typeString": "mapping(address => struct StableTokenFaucet.Recipient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 5217,
                "name": "Recipient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5215,
                "src": "1151:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Recipient_$5215_storage_ptr",
                  "typeString": "struct StableTokenFaucet.Recipient"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5238,
              "nodeType": "Block",
              "src": "1316:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5233,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5206,
                      "src": "1322:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5234,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6320,
                        "src": "1330:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1330:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1322:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 5237,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:18:8"
                }
              ]
            },
            "documentation": null,
            "id": 5239,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 5222,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5221,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6150,
                  "src": "1203:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$6150_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1203:15:8"
              },
              {
                "arguments": [],
                "id": 5224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5223,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6236,
                  "src": "1223:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$6236_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1223:15:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "537461626c65546f6b656e466175636574",
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1257:19:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2d91f4a84ec3a5b285970de159488cd2423a2e2f565c0972d678ca5b5ea10761",
                      "typeString": "literal_string \"StableTokenFaucet\""
                    },
                    "value": "StableTokenFaucet"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5354424c452d46",
                    "id": 5227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1277:9:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1c31e3b2f6b61e96fcef12bd352b2d2011cf518492efd69d9a75907a3b379825",
                      "typeString": "literal_string \"STBLE-F\""
                    },
                    "value": "STBLE-F"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 5228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1287:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 5229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5225,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6208,
                  "src": "1243:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$6208_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:47:8"
              },
              {
                "arguments": [],
                "id": 5231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5230,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6119,
                  "src": "1295:5:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$6119_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:7:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:2:8"
            },
            "returnParameters": {
              "id": 5232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:0:8"
            },
            "scope": 5310,
            "src": "1185:160:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5281,
              "nodeType": "Block",
              "src": "1397:226:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "1411:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1411:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1433:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1425:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1425:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1411:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6323,
                        6324
                      ],
                      "referencedDeclaration": 6323,
                      "src": "1403:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5252,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:33:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5254,
                              "name": "recipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5219,
                              "src": "1450:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                                "typeString": "mapping(address => struct StableTokenFaucet.Recipient storage ref)"
                              }
                            },
                            "id": 5257,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5255,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6320,
                                "src": "1461:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1461:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1450:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$5215_storage",
                              "typeString": "struct StableTokenFaucet.Recipient storage ref"
                            }
                          },
                          "id": 5258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nextGiveawayBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5214,
                          "src": "1450:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5259,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6310,
                            "src": "1493:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1493:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1450:55:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6323,
                        6324
                      ],
                      "referencedDeclaration": 6323,
                      "src": "1442:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1442:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5263,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:64:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5264,
                          "name": "recipients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "1512:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                            "typeString": "mapping(address => struct StableTokenFaucet.Recipient storage ref)"
                          }
                        },
                        "id": 5267,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "1523:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1523:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1512:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipient_$5215_storage",
                          "typeString": "struct StableTokenFaucet.Recipient storage ref"
                        }
                      },
                      "id": 5268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nextGiveawayBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5214,
                      "src": "1512:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5269,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6310,
                          "src": "1555:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1555:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3230",
                        "id": 5271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1570:2:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
                      "src": "1555:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1512:60:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5274,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:60:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6320,
                          "src": "1584:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1584:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030303030303030303030303030303030",
                        "id": 5278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1596:21:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 5275,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6034,
                      "src": "1578:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5280,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:40:8"
                }
              ]
            },
            "documentation": null,
            "id": 5282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:2:8"
            },
            "returnParameters": {
              "id": 5243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5242,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "1389:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:6:8"
            },
            "scope": 5310,
            "src": "1349:274:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5293,
              "nodeType": "Block",
              "src": "1721:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5289,
                      "name": "recipients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5219,
                      "src": "1734:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                        "typeString": "mapping(address => struct StableTokenFaucet.Recipient storage ref)"
                      }
                    },
                    "id": 5291,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5290,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5284,
                      "src": "1745:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1734:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$5215_storage",
                      "typeString": "struct StableTokenFaucet.Recipient storage ref"
                    }
                  },
                  "functionReturnParameters": 5288,
                  "id": 5292,
                  "nodeType": "Return",
                  "src": "1727:29:8"
                }
              ]
            },
            "documentation": null,
            "id": 5294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecipient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5284,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5294,
                  "src": "1649:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1648:20:8"
            },
            "returnParameters": {
              "id": 5288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5287,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5294,
                  "src": "1701:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Recipient_$5215_memory_ptr",
                    "typeString": "struct StableTokenFaucet.Recipient"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5286,
                    "name": "Recipient",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5215,
                    "src": "1701:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$5215_storage_ptr",
                      "typeString": "struct StableTokenFaucet.Recipient"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1700:18:8"
            },
            "scope": 5310,
            "src": "1627:134:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5308,
              "nodeType": "Block",
              "src": "1790:64:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5298,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "1804:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1804:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5300,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5206,
                          "src": "1818:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1804:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6323,
                        6324
                      ],
                      "referencedDeclaration": 6323,
                      "src": "1796:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5303,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5305,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5206,
                        "src": "1843:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5304,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "1830:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 5306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5307,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:19:8"
                }
              ]
            },
            "documentation": null,
            "id": 5309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:2:8"
            },
            "returnParameters": {
              "id": 5296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:8"
            },
            "scope": 5310,
            "src": "1765:89:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5311,
        "src": "766:1091:8"
      }
    ],
    "src": "0:1858:8"
  },
  "legacyAST": {
    "absolutePath": "/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/StableTokenFaucet.sol",
    "exportedSymbols": {
      "StableTokenFaucet": [
        5310
      ]
    },
    "id": 5311,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5191,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:8"
      },
      {
        "id": 5192,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 5193,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6120,
        "src": "485:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 5194,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6209,
        "src": "549:71:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 5195,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6151,
        "src": "621:71:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 5196,
        "nodeType": "ImportDirective",
        "scope": 5311,
        "sourceUnit": 6237,
        "src": "693:71:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5197,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6119,
              "src": "796:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6119",
                "typeString": "contract ERC20"
              }
            },
            "id": 5198,
            "nodeType": "InheritanceSpecifier",
            "src": "796:5:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5199,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6208,
              "src": "803:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$6208",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 5200,
            "nodeType": "InheritanceSpecifier",
            "src": "803:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5201,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6236,
              "src": "818:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$6236",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 5202,
            "nodeType": "InheritanceSpecifier",
            "src": "818:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5203,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6150,
              "src": "833:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$6150",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 5204,
            "nodeType": "InheritanceSpecifier",
            "src": "833:13:8"
          }
        ],
        "contractDependencies": [
          5559,
          6119,
          6150,
          6208,
          6236,
          6305
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5310,
        "linearizedBaseContracts": [
          5310,
          6150,
          6236,
          5559,
          6208,
          6119,
          6305
        ],
        "name": "StableTokenFaucet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5206,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "961:21:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 5205,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "961:15:8",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5208,
            "name": "previousGiveaway",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "986:31:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5207,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "986:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5210,
            "name": "lastGiveaway",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "1021:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5209,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1021:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "StableTokenFaucet.Recipient",
            "id": 5215,
            "members": [
              {
                "constant": false,
                "id": 5212,
                "name": "receiver",
                "nodeType": "VariableDeclaration",
                "scope": 5215,
                "src": "1076:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 5211,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1076:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5214,
                "name": "nextGiveawayBlock",
                "nodeType": "VariableDeclaration",
                "scope": 5215,
                "src": "1098:25:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5213,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1098:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Recipient",
            "nodeType": "StructDefinition",
            "scope": 5310,
            "src": "1053:75:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5219,
            "name": "recipients",
            "nodeType": "VariableDeclaration",
            "scope": 5310,
            "src": "1132:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
              "typeString": "mapping(address => struct StableTokenFaucet.Recipient)"
            },
            "typeName": {
              "id": 5218,
              "keyType": {
                "id": 5216,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1140:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1132:29:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                "typeString": "mapping(address => struct StableTokenFaucet.Recipient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 5217,
                "name": "Recipient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 5215,
                "src": "1151:9:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Recipient_$5215_storage_ptr",
                  "typeString": "struct StableTokenFaucet.Recipient"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5238,
              "nodeType": "Block",
              "src": "1316:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5233,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5206,
                      "src": "1322:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5234,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6320,
                        "src": "1330:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1330:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1322:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 5237,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:18:8"
                }
              ]
            },
            "documentation": null,
            "id": 5239,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 5222,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5221,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6150,
                  "src": "1203:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$6150_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1203:15:8"
              },
              {
                "arguments": [],
                "id": 5224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5223,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6236,
                  "src": "1223:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$6236_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1223:15:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "537461626c65546f6b656e466175636574",
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1257:19:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2d91f4a84ec3a5b285970de159488cd2423a2e2f565c0972d678ca5b5ea10761",
                      "typeString": "literal_string \"StableTokenFaucet\""
                    },
                    "value": "StableTokenFaucet"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "5354424c452d46",
                    "id": 5227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1277:9:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1c31e3b2f6b61e96fcef12bd352b2d2011cf518492efd69d9a75907a3b379825",
                      "typeString": "literal_string \"STBLE-F\""
                    },
                    "value": "STBLE-F"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 5228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1287:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 5229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5225,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6208,
                  "src": "1243:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$6208_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:47:8"
              },
              {
                "arguments": [],
                "id": 5231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5230,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6119,
                  "src": "1295:5:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$6119_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:7:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:2:8"
            },
            "returnParameters": {
              "id": 5232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:0:8"
            },
            "scope": 5310,
            "src": "1185:160:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5281,
              "nodeType": "Block",
              "src": "1397:226:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "1411:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1411:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1433:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1425:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1425:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1411:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6323,
                        6324
                      ],
                      "referencedDeclaration": 6323,
                      "src": "1403:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5252,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:33:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5254,
                              "name": "recipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5219,
                              "src": "1450:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                                "typeString": "mapping(address => struct StableTokenFaucet.Recipient storage ref)"
                              }
                            },
                            "id": 5257,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5255,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6320,
                                "src": "1461:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1461:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1450:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Recipient_$5215_storage",
                              "typeString": "struct StableTokenFaucet.Recipient storage ref"
                            }
                          },
                          "id": 5258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nextGiveawayBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5214,
                          "src": "1450:40:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5259,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6310,
                            "src": "1493:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1493:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1450:55:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6323,
                        6324
                      ],
                      "referencedDeclaration": 6323,
                      "src": "1442:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1442:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5263,
                  "nodeType": "ExpressionStatement",
                  "src": "1442:64:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5264,
                          "name": "recipients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "1512:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                            "typeString": "mapping(address => struct StableTokenFaucet.Recipient storage ref)"
                          }
                        },
                        "id": 5267,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "1523:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1523:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1512:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Recipient_$5215_storage",
                          "typeString": "struct StableTokenFaucet.Recipient storage ref"
                        }
                      },
                      "id": 5268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nextGiveawayBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5214,
                      "src": "1512:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5269,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6310,
                          "src": "1555:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1555:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3230",
                        "id": 5271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1570:2:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
                      "src": "1555:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1512:60:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5274,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:60:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6320,
                          "src": "1584:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1584:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030303030303030303030303030303030",
                        "id": 5278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1596:21:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 5275,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6034,
                      "src": "1578:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5280,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:40:8"
                }
              ]
            },
            "documentation": null,
            "id": 5282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:2:8"
            },
            "returnParameters": {
              "id": 5243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5242,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "1389:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5241,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:6:8"
            },
            "scope": 5310,
            "src": "1349:274:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5293,
              "nodeType": "Block",
              "src": "1721:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 5289,
                      "name": "recipients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5219,
                      "src": "1734:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Recipient_$5215_storage_$",
                        "typeString": "mapping(address => struct StableTokenFaucet.Recipient storage ref)"
                      }
                    },
                    "id": 5291,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 5290,
                      "name": "_recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5284,
                      "src": "1745:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1734:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$5215_storage",
                      "typeString": "struct StableTokenFaucet.Recipient storage ref"
                    }
                  },
                  "functionReturnParameters": 5288,
                  "id": 5292,
                  "nodeType": "Return",
                  "src": "1727:29:8"
                }
              ]
            },
            "documentation": null,
            "id": 5294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecipient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5284,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5294,
                  "src": "1649:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1648:20:8"
            },
            "returnParameters": {
              "id": 5288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5287,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5294,
                  "src": "1701:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Recipient_$5215_memory_ptr",
                    "typeString": "struct StableTokenFaucet.Recipient"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5286,
                    "name": "Recipient",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5215,
                    "src": "1701:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Recipient_$5215_storage_ptr",
                      "typeString": "struct StableTokenFaucet.Recipient"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1700:18:8"
            },
            "scope": 5310,
            "src": "1627:134:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5308,
              "nodeType": "Block",
              "src": "1790:64:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5298,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6320,
                            "src": "1804:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1804:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5300,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5206,
                          "src": "1818:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1804:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6323,
                        6324
                      ],
                      "referencedDeclaration": 6323,
                      "src": "1796:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5303,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5305,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5206,
                        "src": "1843:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5304,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6328,
                      "src": "1830:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 5306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5307,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:19:8"
                }
              ]
            },
            "documentation": null,
            "id": 5309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:2:8"
            },
            "returnParameters": {
              "id": 5296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:8"
            },
            "scope": 5310,
            "src": "1765:89:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5311,
        "src": "766:1091:8"
      }
    ],
    "src": "0:1858:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-08T23:41:32.161Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}